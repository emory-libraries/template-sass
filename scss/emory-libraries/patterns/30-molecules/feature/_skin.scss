////
/// @group emory-libraries.patterns.molecules.feature
////

/// Defines the base skin of the feature component.
///
/// @since 1.0.0
///
/// @type map
$molecules-feature: (

  'theme': 'light',
  'themes': (
    'light': (
      'background': tint(color('slate', 'light'), 50%),
      'context': $color-text-dark,
      'heading': color('blue', 'mid'),
      'description': $color-text-dark
    ),
    'dark': (
      'background': color('white'),
      'context': tint($color-text-dark, 50%),
      'heading': color('blue', 'mid'),
      'description': $color-text-dark
    )
  ),

  'padding': 25px,
  'gap': (
    'x': 25px,
    'y': 5px
  ),
  'size': 400px,

  'border': (
    'offset': 15px,
    'thickness': $border-width-s,
    'color': rgba(color('charcoal'), .2)
  ),

  'spacing': (
    'description': 10px,
    'action': 20px
  ),

  'image': 275px

);

/// Defines the feature component theme.
///
/// @since 1.0.0
///
/// @requires {function} Brandy::map-deep-get <https://laurenhamel.github.io/brandy/docs/#brandy-maps-function-map-deep-get>
///
/// @param {map} skin - The component's skin
///
/// @output The feature component's themeable properties
@mixin molecules-feature--theme ( $skin ) {

  // Capture selector.
  $selector: &;

  // Capture themeable variables from skin.
  $theme: map-deep-get($skin, 'theme');
  $themes: map-deep-get($skin, 'themes');
  $padding: map-deep-get($skin, 'padding');
  $size: map-deep-get($skin, 'size');
  $gap-x: map-deep-get($skin, 'gap.x');
  $gap-y: map-deep-get($skin, 'gap.y');
  $image: map-deep-get($skin, 'image');

  // Get theme-specific variables.
  $theme-background: map-deep-get($skin, 'themes.' + $theme + '.background');
  $theme-context: map-deep-get($skin, 'themes.' + $theme + '.context');
  $theme-heading: map-deep-get($skin, 'themes.' + $theme + '.heading');
  $theme-description: map-deep-get($skin, 'themes.' + $theme + '.description');

  // Get border-specific variables.
  $border-offset: map-deep-get($skin, 'border.offset');
  $border-thickness: map-deep-get($skin, 'border.thickness');
  $border-color: map-deep-get($skin, 'border.color');

  // Get spacing-specific variables.
  $spacing-description: map-deep-get($skin, 'spacing.description');
  $spacing-action: map-deep-get($skin, 'spacing.action');

  // Defines the feature component's base styles.
  grid-template-columns: 1fr;
  grid-gap: $gap-y;
  padding: $padding;
  margin: $border-offset;
  background-color: $theme-background;
  min-height: ($size - ($border-offset * 2));
  @include layered-border($border-thickness solid $border-color, $border-offset solid $theme-background);

  // Modifies feature styles for larger screens.
  @include breakpoint-l {
    grid-column-gap: $gap-x;
    grid-row-gap: $gap-y;
    grid-template-columns: $image 1fr;
  };

  // Defines feature image styles.
  &-image {
    margin-bottom: $gap-x;
    top: (-$padding - $border-offset);
    left: (-$padding - $border-offset);
    right: (-$padding - $border-offset);

    // Modifies feature styles for larger screens.
    @include breakpoint-l {
      margin-bottom: 0;
      right: 0;
      bottom: (-$padding - $border-offset);
    };

    // Modifies border style for images.
    &::after {
      top: ($border-offset - $border-thickness);
      left: ($border-offset - $border-thickness);
      right: ($border-offset - $border-thickness);
      border-left: $border-thickness solid $border-color;
      border-top: $border-thickness solid $border-color;
      border-right: $border-thickness solid $border-color;

      // Modifies border styles for larger screens.
      @include breakpoint-l {
        right: 0;
        bottom: ($border-offset - $border-thickness);
        border-right: none;
        border-bottom: $border-thickness solid $border-color;
      };

    }

  }

  // Defines feature context styles.
  &-context {
    @include tokens-heading('h6', $theme-context);
  }

  // Defines feature heading styles.
  &-heading {
    @include tokens-heading('h5', $theme-heading);
  }

  // Defines feature description styles.
  &-description {
    @include tokens-text('body-alt', $theme-description);
    @include margin-y( $spacing-description );
  }

  // Defines feature action styles.
  &-action {
    margin-top: $spacing-action;
  }

  // Applies themes to feature.
  @each $theme, $colors in $themes {

    // Get theme-specific variables.
    $theme-background: map-deep-get($colors, 'background');
    $theme-context: map-deep-get($colors, 'context');
    $theme-heading: map-deep-get($colors, 'heading');
    $theme-description: map-deep-get($colors, 'description');

    // Modify styles based on theme.
    &.-#{$theme} {
      background-color: $theme-background;
      @include layered-border($border-thickness solid $border-color, $border-offset solid $theme-background);

      // Modify context styles.
      #{$selector}-context {
        color: $theme-context;
      }

      // Modify heading styles.
      #{$selector}-heading {
        color: $theme-heading;
      }

      // Modify description styles.
      #{$selector}-description {
        color: $theme-description;
      }

    }

  }

}
