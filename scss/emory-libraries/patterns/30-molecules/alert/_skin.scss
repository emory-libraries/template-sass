////
/// @group emory-libraries.patterns.molecules.alert
////

/// Defines the base skin of the alert component.
///
/// @since 1.0.0
///
/// @type map
$molecules-alert: (

  'themes': (

    'default': (
      'foreground': color('charcoal'),
      'background': tint(color('charcoal'), 80%),
      'border': rgba(tint(nth(color-stops(color('charcoal'), tint(color('charcoal'), 80%), 3), 2), 25%), .3),
      'dismiss': (
        'normal': tint(nth(color-stops(color('charcoal'), tint(color('charcoal'), 80%), 3), 2), 25%),
        'hover': nth(color-stops(color('charcoal'), tint(color('charcoal'), 80%), 3), 2),
        'active': nth(color-stops(color('charcoal'), tint(color('charcoal'), 80%), 3), 2)
      )
    ),

    'info': (
      'foreground': color('ui', 'info'),
      'background': color('ui', 'info', 'light'),
      'border': rgba(color('ui', 'info', 'bright'), .3),
      'dismiss': (
        'normal': color('ui', 'info', 'bright'),
        'hover': color('ui', 'info', 'mid'),
        'active': color('ui', 'info', 'mid')
      )
    ),

    'success': (
      'foreground': color('ui', 'success'),
      'background': color('ui', 'success', 'light'),
      'border': rgba(color('ui', 'success', 'bright'), .3),
      'dismiss': (
        'normal': color('ui', 'success', 'bright'),
        'hover': color('ui', 'success', 'mid'),
        'active': color('ui', 'success', 'mid')
      )
    ),

    'caution': (
      'foreground': color('ui', 'caution'),
      'background': color('ui', 'caution', 'light'),
      'border': rgba(color('ui', 'caution', 'bright'), .3),
      'dismiss': (
        'normal': color('ui', 'caution', 'bright'),
        'hover': color('ui', 'caution', 'mid'),
        'active': color('ui', 'caution', 'mid')
      )
    ),

    'error': (
      'foreground': color('ui', 'error'),
      'background': color('ui', 'error', 'light'),
      'border': rgba(color('ui', 'error', 'bright'), .3),
      'dismiss': (
        'normal': color('ui', 'error', 'bright'),
        'hover': color('ui', 'error', 'mid'),
        'active': color('ui', 'error', 'mid')
      )
    ),

    'light': (
      'foreground': color('charcoal'),
      'background': color('white'),
      'border': rgba(tint(mix(color('charcoal'), color('white'), 40%), 25%), .3),
      'dismiss': (
        'normal': tint(mix(color('charcoal'), color('white'), 40%), 25%),
        'hover': mix(color('charcoal'), color('white'), 40%),
        'active': mix(color('charcoal'), color('white'), 40%)
      )
    ),

    'dark': (
      'foreground': color('white'),
      'background': color('charcoal'),
      'border': rgba(tint(mix(color('white'), color('charcoal'), 40%), 25%), .3),
      'dismiss': (
        'normal': tint(mix(color('white'), color('charcoal'), 40%), 25%),
        'hover': mix(color('white'), color('charcoal'), 40%),
        'active': mix(color('white'), color('charcoal'), 40%)
      )
    )

  ),
  'theme': 'default',

  'border': (
    'thickness': $border-width-s,
    'offset': 25px
  ),

  'gap': 10px,
  'padding': 25px,
  'dismiss': (
    'size': 25px,
    'padding': 5px
  ),

  'transition': (
    'duration': $transition-duration,
    'timing': $transition-timing
  )

);

/// Defines the alert component theme.
///
/// @since 1.0.0
///
/// @requires {function} Brandy::map-deep-get <https://laurenhamel.github.io/brandy/docs/#brandy-maps-function-map-deep-get>
///
/// @param {map} skin - The component's skin
///
/// @output The alert component's themeable properties
@mixin molecules-alert--theme ( $skin ) {

  // Capture selector.
  $selector: &;

  // Capture themeable variables from skin.
  $theme: map-deep-get($skin, 'theme');
  $themes: map-deep-get($skin, 'themes');
  $padding: map-deep-get($skin, 'padding');
  $duration: map-deep-get($skin, 'transition.duration');
  $timing: map-deep-get($skin, 'transition.timing');
  $gap: map-deep-get($skin, 'gap');

  // Get theme-specific variables.
  $theme-foreground: map-deep-get($themes, $theme + '.foreground');
  $theme-background: map-deep-get($themes, $theme + '.background');
  $theme-border: map-deep-get($themes, $theme + '.border');
  $theme-dismiss: map-deep-get($themes, $theme + '.dismiss');

  // Get border-specific variables.
  $border-thickness: map-deep-get($skin, 'border.thickness');
  $border-offset: map-deep-get($skin, 'border.offset');

  // Get dismiss-specific variables.
  $dismiss-size: map-deep-get($skin, 'dismiss.size');
  $dismiss-padding: map-deep-get($skin, 'dismiss.padding');

  // Defines the alert component's base styles.
  background-color: $theme-background;
  @include layered-border(
    $border-thickness solid $theme-border,
    $border-offset solid $theme-background
  );
  margin: $border-offset;
  padding: $padding;
  grid-gap: $gap;

  // Defines the alert title styles.
  &-title {
    @include tokens-heading--font('h6');
    @include tokens-heading--color('h6', $color: $theme-foreground);
  }

  // Defines the alert message styles.
  &-message {
    @include tokens-text--font('body-alt');
    @include tokens-text--color('body-alt', $color: $theme-foreground);
  }

  // Defines the alert dismiss styles.
  &-dismiss {

    $normal: map-get($theme-dismiss, 'normal');
    $hover: map-get($theme-dismiss, 'hover');
    $active: map-get($theme-dismiss, 'active');

    @include size( $dismiss-size );
    padding: $dismiss-padding;
    color: $normal;
    transition: all $duration $timing;

    svg {
      fill: $normal;
      transition: all $duration $timing;
    }

    &:hover,
    &:focus,
    &.is-hover,
    &.is-focus {
      color: $hover;

      svg {
        fill: $hover;
      }

    }

    &:active,
    &.is-active {
      color: $active;

      svg {
        fill: $active;
      }

    }

  }

  // Defines theme-based styles.
  @each $theme, $colors in $themes {

    // Get theme-specific variables.
    $theme-foreground: map-deep-get($colors, 'foreground');
    $theme-background: map-deep-get($colors, 'background');
    $theme-border: map-deep-get($colors, 'border');
    $theme-dismiss: map-deep-get($colors, 'dismiss');

    &.-#{$theme} {
      background-color: $theme-background;
      @include layered-border(
        $border-thickness solid $theme-border,
        $border-offset solid $theme-background
      );

      #{$selector}-title {
        color: $theme-foreground;
      }

      #{$selector}-message {
        color: $theme-foreground;
      }

      #{$selector}-dismiss {

        $normal: map-get($theme-dismiss, 'normal');
        $hover: map-get($theme-dismiss, 'hover');
        $active: map-get($theme-dismiss, 'active');

        color: $normal;

        svg {
          fill: $normal;
        }

        &:hover,
        &:focus,
        &.is-hover,
        &.is-focus {
          color: $hover;

          svg {
            fill: $hover;
          }

        }

        &:active,
        &.is-active {
          color: $active;

          svg {
            fill: $active;
          }

        }

      }

    }

  }

}
