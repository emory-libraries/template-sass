////
/// @group emory-libraries.patterns.organisms.section-main
////

/// Defines the base structure of the section-main component.
///
/// @since 1.0.0
%organisms-section-main {

  // Captures selector.
  $selector: &;

  // Set the maximum number of auto placement rows allowed.
  $max-rows: (
    'auto': 100,
    'section': 10
  );

  // Builds the section-main structure.
  margin: 0 auto;
  width: 100%;
  max-width: 1236px;
  display: grid;
  grid-area: main;

  // Initializes a helper for building page-specific grid layouts.
  @mixin grid-layout( $overrides: () ) {

    // Override any element settings.
    $elements: map-extend((
      'title': true,
      'subtitle': true,
      'body': true,
      'auto': true,
      'section': true,
      'sidebar': true
    ), $overrides);

    // Initialize variables to build grid row definitions.
    $rows: ('[breadcrumb-start] min-content');
    $name: ('breadcrumb-end');

    // Build definitions for grid rows.
    @each $element, $enabled in $elements {

      // Only initialize the row if it's enabled.
      @if( $enabled ) {

        // Initialize the row.
        $row: ();

        // Build the row definition.
        @if( $element != 'auto' and $element != 'section' ) {

          $name: append($name, '#{$element}-start', space);
          $row: append($row, '[#{$name}] min-content', space);
          $name: append((), '#{$element}-end', space);

        }

        @else {

          @if( length($name) > 0 ) {
            $row: append($row, '[#{$name}]', space);
          }

          $max: map-get($max-rows, $element);
          $row: append($row, 'repeat(#{$max}, [#{$element}-start] min-content [#{$element}-end])', space);
          $name: ();

        }

        // Save the row definition.
        $rows: join($rows, $row);

      }

    }

    // Merge any remaining names into the rows.
    @if( length($name) > 0 ) {
      $rows: append($rows, '[#{$name}]', space);
    }

    // Set the default grid layout across all breakpoints.
    @include breakpoint-s-m-l {

      // Define a single-column layout as the default.
      grid-template-columns: [main-start] 1fr [main-end];

      // Define the grid's default row templates.
      grid-template-rows: #{unstringify($rows)};

    };

    // If sidebar exists, then also create a two-column layout for large screens.
    @if( map-get($elements, 'sidebar') ) {

      // Reset variables.
      $rows: ('[breadcrumb-start] min-content');
      $name: ('breadcrumb-end main-start');

      // Remove the sidebar from the grid elements.
      $elements: map-remove($elements, 'sidebar');

      // Build responsive definitions for grid rows.
      @each $element, $enabled in $elements {

        // Only initialize the row if it's enabled.
        @if( $enabled ) {

          // Initialize the row.
          $row: ();

          // Build the row definition.
          @if( $element != 'auto' and $element != 'section' ) {

            $name: append($name, unquote('#{$element}-start'), space);
            $row: append($row, unquote('[#{$name}] min-content'), space);
            $name: append((), unquote('#{$element}-end'), space);

          }

          @else {

            @if( $element == 'section' ) {
              $name: append($name, 'main-end', space);
            }

            @if( length($name) > 0 ) {
              $row: append($row, '[#{$name}]', space);
            }

            $max: map-get($max-rows, $element);
            $row: append($row, 'repeat(#{$max}, [#{$element}-start] min-content [#{$element}-end])', space);
            $name: ();

          }

          // Save the row definition.
          $rows: join($rows, $row);

        }

      }

      // Close the main grid area if not previously closed.
      @if( not map-get($elements, 'section') ) {
        $name: append($name, 'main-end', space);
      }

      // Merge any remaining names into the rows.
      @if( length($name) > 0 ) {
        $rows: append($rows, '[#{$name}]', space);
      }

      // Override the gird layout for large screens.
      @include breakpoint-l {

        // Define a two-column grid layout for large screens.
        grid-template-columns: [main-start] 1fr [main-end sidebar-start] 340px [sidebar-end];

        // Define the grid's row templates.
        grid-template-rows: #{unstringify($rows)};

      };

    }

  }

  // Builds the main breadcrumb structure.
  &-breadcrumb {
    grid-column: main;
    grid-row: breadcrumb;
    display: flex;
    align-items: center;
    flex-wrap: nowrap;
    margin-bottom: $rhythm-y;
  }

  // Builds the main title structure.
  &-title {
    grid-column: main;
    grid-row: title;
  }

  // Builds the main subtitle structure.
  &-subtitle {
    grid-column: main;
    grid-row: subtitle;
  }

  // Builds the main body structure.
  &-body {
    grid-column: main;
    grid-row: body;
  }

  // Builds the main sidebar structure.
  &-sidebar {
    grid-column: main;
    grid-row: sidebar;
    display: flex;
    justify-content: center;

    // Adjust the main sidebar structure across large screens.
    @include breakpoint-l {
      grid-column: sidebar;
      grid-row: main;
    };

  }

  // Builds the main spacer structure.
  &-spacer {
    grid-column: main;
    grid-row: auto;
  }

  // Builds the main content structure.
  &-content {
    grid-column: main;
    grid-row: auto;
  }

  // Builds the main section structure.
  &-section {
    grid-column: main / sidebar;
    grid-row: section;
  }

  // Remove spacing between title and subtitle on most pages.
  &.-info-page,
  &.-material-page,
  &.-tool-page,
  &.-bio-page,
  &.-research-help-page,
  &.-service-directory-page,
  &.-subject-librarian-directory-page,
  &.-staff-directory-page {

    #{$selector}-title {
      margin-bottom: 0;
    }

  }

  // Builds the main structure when used for an info page.
  &#{selector-excludes(
    '.-info-page',
    '.-material-page',
    '.-tool-page',
    '.-bio-page',
    '.-research-help-page',
    '.-service-directory-page',
    '.-subject-librarian-directory-page',
    '.-staff-directory-page',
    '.-gallery-page',
  )},
  &.-info-page {
    @include grid-layout;

    // Adjust the main structure across large screens.
    @include breakpoint-l {

      // Adjust the breadcrumb placement within the grid.
      #{$selector}-breadcrumb {
        grid-column: main / sidebar;
      }

      // Adjust the title and subtitle placement within the grid.
      #{$selector}-title,
      #{$selector}-subtitle, {
        grid-column: main / sidebar;
      }

      // Adjust the sidebar placement within the grid.
      #{$selector}-sidebar {
        grid-row: body / main;
      }

    };

  }

  // Builds the main structure when used for a material and tool pages.
  &.-material-page,
  &.-tool-page {
    @include grid-layout;

    // Adjusts the main structure across large screens.
    @include breakpoint-l {

      // Adjust the breadcrumb placement within the grid.
      #{$selector}-breadcrumb {
        grid-column: main / sidebar;
      }

      // Adjusts the title placement within the grid.
      #{$selector}-title {
        grid-column: main / sidebar;
      }

      // Adjust the sidebar placement within the grid.
      #{$selector}-sidebar {
        grid-row: subtitle / main;
      }

    };

  }

  // Builds the main structure when used for a bio page.
  &.-bio-page {
    @include grid-layout;

    // Add a top margin to the title and sidebar to make up for the title acting as a wrapper.
    #{$selector}-title,
    #{$selector}-sidebar {
      margin-top: px( map-deep-get($fonts-scale, 'heading.h1') * $base-font-size * .67 );
    }

    // Add a margin to the subtitle to make up for the subtitle acting as a wrapper.
    #{$selector}-subtitle {
      @include margin-y($rhythm-y / 2);
    }

    // Adjusts the main structure across large screens.
    @include breakpoint-l {

      // Adjust the breadcrumb placement within the grid.
      #{$selector}-breadcrumb {
        grid-column: main / sidebar;
      }

      // Adjusts the title placement within the grid.
      #{$selector}-title {
        grid-column: main;
      }

    };

  }

  // Builds the main structure when used for a service directory page.
  &.-service-directory-page {
    @include grid-layout((
      'spacer': false,
      'content': false,
      'section': false,
      'sidebar': false
    ));

    // Hide grid areas that are not being used within this page type.
    #{$selector}-spacer,
    #{$selector}-content,
    #{$selector}-section,
    #{$selector}-sidebar {
      display: none;
    }

    &.without-intro {
      @include grid-layout((
        'title': false,
        'subtitle': false,
        'spacer': false,
        'content': false,
        'section': false,
        'sidebar': false
      ));

      // Hide grid areas that are not being used within this page type.
      #{$selector}-title,
      #{$selector}-subtitle {
        display: none;
      }

    }

  }

  // Builds the main structure when used for a research help page.
  &.-research-help-page {
    @include grid-layout((
      'subtitle': false,
      'section': false,
      'sidebar': false
    ));

    // Hide grid areas that are not being used within this page type.
    #{$selector}-subtitle,
    #{$selector}-section,
    #{$selector}-sidebar {
      display: none;
    }

  }

  // Builds the main structure when used for a subject librarian directory and staff directory page.
  &.-subject-librarian-directory-page,
  &.-staff-directory-page {
    @include grid-layout((
      'spacer': false,
      'content': false,
      'section': false,
      'sidebar': false
    ));

    // Hide grid areas that are not being used within this page type.
    #{$selector}-spacer,
    #{$selector}-content,
    #{$selector}-section,
    #{$selector}-sidebar {
      display: none;
    }

    &.without-intro {
      @include grid-layout((
        'title': false,
        'subtitle': false,
        'spacer': false,
        'content': false,
        'section': false,
        'sidebar': false
      ));

      // Hide grid areas that are not being used within this page type.
      #{$selector}-title,
      #{$selector}-subtitle {
        display: none;
      }

    }

  }

  // Builds the main structure when used for a gallery page.
  &.-gallery-page {
    @include grid-layout((
      'subtitle': false,
      'body': false,
      'spacer': false,
      'content': false,
      'section': false,
      'sidebar': false
    ));

    // Hide grid areas that are not being used within this page type.
    #{$selector}-subtitle,
    #{$selector}-body,
    #{$selector}-spacer,
    #{$selector}-content,
    #{$selector}-section,
    #{$selector}-sidebar {
      display: none;
    }
  }

}
