////
/// @group emory-libraries.patterns.tokens.icon
////

/// Load the icon component's structure and skin.
@import 'icon/structure';
@import 'icon/skin';

/// Builds a constructor for the icon component.
///
/// @since 1.0.0
///
/// @requires {placeholder} tokens-icon
/// @requires {variable} tokens-icon
/// @requires {mixin} tokens-icon--icon
/// @requires {function} Brandy::map-extend <https://laurenhamel.github.io/brandy/docs/#brandy-maps-function-map-extend>
///
/// @param {string} id - The ID of the desired icon
/// @param {color} color [null] - The desired icon color
/// @param {number} size [null] - The desired icon size
/// @param {map} custom [()] - A custom skin for the component
/// @param {boolean} pseudo [false] - Whether the target selector is a pseudo element
///
/// @output The native structure and skin of our icon component
///
/// @status construction
@mixin tokens-icon ( $id, $color: null, $size: null, $custom: (), $pseudo: false ) {
  
  // Extend the default skin.
  $skin: map-extend($tokens-icon, $custom);
  
  // Initialize the icon component.
  @if( $pseudo == false ) {
    
    &::before {

      // Load structure.
      @extend %tokens-icon;

      // Load skins.
      @include tokens-icon--icon( $id, $color, $size, $skin );

    }
    
  }
  
  @else {
    
    & {

      // Load structure.
      @extend %tokens-icon;

      // Load skins.
      @include tokens-icon--icon( $id, $color, $size, $skin );

    }
    
  }
  
}