////
/// @group emory-libraries.patterns.atoms.table
////

/// Defines the base skin of the table component.
///
/// @since 1.0.0
///
/// @type map
$atoms-table: (

  'align': left,

  'border': (
    'thickness': $border-width-s,
    'color': color('slate', 'light')
  ),

  'header': (
    'background': color('blue', 'dark'),
    'foreground': color('gold')
  ),

  'heading': color('blue')

);


/// Defines the table component theme.
///
/// @since 1.0.0
///
/// @requires {mixin} tokens-heading
/// @requires {mixin} tokens-text
/// @requires {function} Brandy::map-deep-get <https://laurenhamel.github.io/brandy/docs/#brandy-maps-function-map-deep-get>
/// @requires {function} Brandy::color-contrast <https://laurenhamel.github.io/brandy/docs/#brandy-colors-function-color-contrast>
/// @requires {mixin} Brandy::last-child <https://laurenhamel.github.io/brandy/docs/#brandy-selects-mixin-last-child>
/// @requires {mixin} Brandy::when-descendant-of <https://laurenhamel.github.io/brandy/docs/#brandy-selects-mixin-when-descendant-of>
///
/// @param {map} skin - The component's skin
///
/// @output The table component's themeable properties
@mixin atoms-table--theme ( $skin ) {

  // Capture the class name.
  $class: &;

  // Captures themeable variables.
  $align: map-deep-get($skin, 'align');
  $heading: map-deep-get($skin, 'heading');
  $thickness: map-deep-get($skin, 'border.thickness');
  $border: map-deep-get($skin, 'border.color');

  // Build table component styles.
  text-align: $align;
  @include tokens-text--font('data');
  @include tokens-text--color('data');

  // Build table heading styles.
  &-heading {
    text-align: $align;
    @include tokens-heading--font('h5-alt');
    @include tokens-heading--color('h5-alt', $color: $heading);
  }

  // Build table caption styles
  &-caption {
    text-align: $align;
    @include tokens-text;
  }

  // Build table header styles.
  &-header {
    $background: map-deep-get($skin, 'header.background');
    $foreground: map-deep-get($skin, 'header.foreground');
    $color: if( is-color($foreground), $foreground, color-contrast($background) );
    background-color: $background;
    @include tokens-heading--font('h6');
    @include tokens-heading--color('h6', $color: $color);
  }

  // Build table header, body, and footer styles.
  &-header,
  &-body,
  &-footer {
    border: $thickness solid $border;
  }

  // Build table row styles.
  &-row {
    border-bottom: $thickness solid $border;

    // Always remove borders from the last row.
    @include last-child {
      border-bottom: 0;
    };

  }

  // Build table cell styles.
  &-cell {

    // Styles heading cells.
    &.-heading {
      font-weight: bold;

      // Styles heading cells within the table body.
      @include when-descendant-of( #{$class}-body ) {

        // Apply a right border to all headings that are not in the last column.
        &:not(:last-child) {
          border-right: $thickness solid $border;
        }

        // Apply a left border to all headings that are not in the first column.
        &:not(:first-child) {
          border-left: $thickness solid $border;
        }

      };

    }

  }

}
