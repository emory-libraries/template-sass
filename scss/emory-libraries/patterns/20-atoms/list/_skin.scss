////
/// @group emory-libraries.patterns.atoms.list
////

/// Defines the base skin of the list component.
///
/// @since 1.0.0
///
/// @type map
$atoms-list: (

  'marker': (
    'offset': 25px
  ),

  'bulleted': (
    'marker': (
      'style': 'â– ',
      'color': color('blue', 'bright')
    )
  ),

  'numbered': (
    'marker': (
      'style': decimal,
      'period': true,
      'color': color('blue', 'bright')
    )
  ),

  'topics': (
    'delimiter': ', '
  ),

  'files': (
    'gap': 10px
  ),

  'title': color('blue', 'dark')

);

/// Defines the list component theme.
///
/// @since 1.0.0
///
/// @requires {function} Brandy::map-deep-get <https://laurenhamel.github.io/brandy/docs/#brandy-maps-function-map-deep-get>
///
/// @param {map} skin - The component's skin
///
/// @output The list component's themeable properties
@mixin atoms-list--theme ( $skin ) {

  // Capture selector.
  $selector: &;

  // Capture themeable variables from skin.
  $title: map-deep-get($skin, 'title');

  // Get marker-specific variables.
  $marker-offset: map-deep-get($skin, 'marker.offset');

  // Defines the list component's base styles.
  // ...

  // Defines bulleted list styles.
  &:not(.-numbered):not(.-links):not(.-topics):not(.-files),
  &.-bulleted {
    padding-left: $marker-offset;

    // Add list item styles.
    #{$selector}-item {

      // Add markers to list items.
      &::before {
        content: map-deep-get($skin, 'bulleted.marker.style');
        color: map-deep-get($skin, 'bulleted.marker.color');
        left: -$marker-offset;
      }

    }

  }

  // Defines numbered list styles.
  &.-numbered {
    counter-reset: numbered-list-item;
    padding-left: $marker-offset;

    // Add list item styles.
    #{$selector}-item {

      // Add markers to list items.
      &::before {
        $marker: counter(numbered-list-item, map-deep-get($skin, 'numbered.marker.style'));

        content: if(map-deep-get($skin, 'numbered.marker.period') == true, $marker '.', $marker);
        counter-increment: numbered-list-item;
        color: map-deep-get($skin, 'numbered.marker.color');
        left: -$marker-offset;
        font-family: font('accent');
        font-size: 16px;
        font-weight: bold;
        font-style: normal;
        line-height: inherit;
      }

    }

  }

  // Defines link list styles.
  &.-links { }

  // Defines topic list styles.
  &.-topics {

    // Add topic list styles.
    #{$selector}-item {

      // Add delimiters to list items.
      &:not(:last-child)::after {
        content: map-deep-get($skin, 'topics.delimiter');
      }

    }

  }

  // Defines file list styles.
  &.-files {
    grid-gap: map-deep-get($skin, 'files.gap');
  }

  // Define the list title styles.
  &-title {
    @include tokens-heading--font('h6', $important: true);
    @include tokens-heading--color('h6', $color: $title, $important: true);
  }

}
